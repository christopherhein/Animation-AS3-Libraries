/* ------------------------------- *//* 	Particle System Class	* version: 0.1	* Author: Christopher Hein	* http://www.christopherhein.com	* email: me@christopherhein.com	This Class file controls objects in a 3D space	using Z soace and random generators to continuously 	move the objects around.		****** TO USE ******	new Space( [ objects ], depth:Number, clickable = ( true/false ) );*//* ------------------------------- */package christopherhein{		import flash.display.*;	import flash.events.*;	import flash.text.*;	import flash.utils.*;	import com.webdevils.*;	import caurina.transitions.*;	import caurina.transitions.properties.*;		public class ParticleSystem	{			// Private Variables		private var _array:Array;		private var _objectsMaking:uint;		private var _depth:Number;		private var t:Number = 7;		private var del:Number = 0;		private var size:Number = 1;		private var trans:String = "linear";		private var i:Number;		private var _clickable:Boolean;		private var _baseColor:uint;		private var _width:Number;		private var _height:Number;				public function ParticleSystem( a:Array, d:Number, c:Boolean, bC:uint, w:Number, h:Number )		{			FilterShortcuts.init();			ColorShortcuts.init();				// Declaring Values for the private variables 			_array = a;			_depth = d;			_width = w;			_height = h; 			_clickable = c;			_baseColor = bC;			_objectsMaking = _array.length;						if( c == true )			{				ButtonEnabled( _array );			} else 			{				ButtonUnabled( _array );							}							// First Function			onPlay( _array );					} // --- End of the Constructor Function				// --- Private Functions		private function onPlay( _array ):void		{			for( var i:Number = 0; i < _objectsMaking; i++ )			{					// Variables				var _ran:Number = Math.random();				var xPos:Number = Math.round(_ran * ( _width * 1.2 ));				var yPos:Number = Math.round(_ran * ( _height * 1.5 ));				var zPos:Number = Math.round(_ran * ( _depth * 3 ));				var blur:Number = ( zPos * .01 );				var size:Number = ( blur * .2 );				var time:Number = _ran * ( t * 5 );				var delay:Number = _ran * ( del );										// Tweener				Tweener.addTween( _array[i],								 {									time: time,									delay: del,									scaleX: size,									scaleY: size,									x: xPos,									y: yPos,									z: zPos,									alpha: 1,									_color: _baseColor,									_Blur_blurX: blur, 									_Blur_blurY: blur,									transition: trans,									onComplete: repetition,									onCompleteParams:[ _array ]								 });							} // --- End of the For Loop		} // -- End of the onPlay Function					// Repetition Function		private function repetition( _array ):void		{			for( var i:Number = 0; i < _objectsMaking; i++ )			{					// Variables				var _ran:Number = Math.random();				var xPos:Number = Math.round(_ran * ( _width * 1.2 ));				var yPos:Number = Math.round(_ran * ( _height * 1.5 ));				var zPos:Number = Math.round(_ran * ( _depth * 3 ));				var blur:Number = ( zPos * .01 );				var size:Number = ( blur * .2 );				var time:Number = _ran * ( t * 5 );				var delay:Number = _ran * ( del );										// Tweener				Tweener.addTween( _array[i],								 {									time: time,									delay: del,									scaleX: size,									scaleY: size,									x: xPos,									y: yPos,									z: zPos,									alpha: 1,									_color: _baseColor,									_Blur_blurX: blur, 									_Blur_blurY: blur,									transition: trans,									onComplete: onPlay,									onCompleteParams:[ _array ]								});			} // --- End of For Loop		} // --- End of the Repetition Function					// Button Enabled		private function ButtonEnabled( _array ):void		{			for( var i:Number = 0; i < _objectsMaking; i++ )			{				_array[i].buttonMode = true;				_array[i].mouseEnabled = true;			}		}					// Button Unabled		private function ButtonUnabled( _array ):void		{			for( var i:Number = 0; i < _objectsMaking; i++ )			{				_array[i].buttonMode = false;				_array[i].mouseEnabled = false;			}		}				// --- Public Functions			/* ------------------------------------------------------------------------------------------								This will bring the clicked object to Front and center and blur out other objects				****** To Use ******				(Particle System Name).frontCenter( CurrentTarget, HighlightColor, DarkColor, Blur, darkenBackground:( True/False ) );							   ------------------------------------------------------------------------------------------ */		public function frontCenter( _MC:*, c:uint, dC:uint, b:Number, t:Boolean ):void		{			var startOver:Timer = new Timer(4000, 1);            startOver.addEventListener( "timer", timerClock );				// background Objects			for(var i = 0; i < _objectsMaking; i++)			{				if ( _array[i] != _MC )				{					_array[i].mouseEnabled = true;					_array[i].buttonMode = true;						// Darken BG and Blur                	Tweener.addTween( _array[i],									 {										 _color: dC,										 _Blur_blurX: b, 										 _Blur_blurY: b,										 alpha: .15,										 z: -300,											 transition: "linear"									 });				} else				{					startOver.start();					_MC.mouseEnabled = false;					_MC.buttonMode = false;						// Add Color					Tweener.addTween( _MC,									 {										 time: 2,										 delay: 0,										 scaleX: ( size * .75),										 scaleY: ( size * .75),										 alpha: 1,										 x: 477.5,										 y: 300,										 z: 200,										 _color: c,										 _Blur_blurX: 0, 										 _Blur_blurY: 0,										 transition: "easeIn"									  });				} // --- End If/Else 			} // --- End For Loop		} // --- End Front Center Function				private function timerClock( Evt:Event ):void		{			for( var i:Number = 0; i < _objectsMaking; i++ )			{				Tweener.addTween( _array[i],										   {											  time: 1.5,											  _color: 0xFFFFFF 										   });				_array[i].mouseEnabled = true;				_array[i].buttonMode = true;			}						onPlay( _array );		}					/* ------------------------------------------------------------------------------------------								Blur out other objects and Darken Background				****** To Use ******				(Particle System Name).darkenBack( DarkerColor, Blur );							   ------------------------------------------------------------------------------------------ */		public function darkenBack( c:uint, b:Number ):void		{				// Darken background			for(var i = 0; i < _objectsMaking; i++)			{				Tweener.addTween( _array[i],								 {									 _color: c,								 	 _Blur_blurX: b, 								 	 _Blur_blurY: b,									 transition: "linear"								 });			} // End For Loop		} // --- End the Darken Background									} // --- End of the Space Class} // --- End of the package